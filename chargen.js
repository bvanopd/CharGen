import Background from "./background.js";
import Character
 from "./character.js";
window.charGen = () => {

  let char = new Character;
  let allSkills = ["Administer","Connect","Convince","Craft","Exert","Heal","Know","Lead","Magic","Melee","Notice","Perform","Pray","Ranged","Ride"
                    ,"Sail","Sneak","Survive","Trade","Unarmed","Work"];

  let allFocuses = ["Administer","Connect","Convince","Craft","Exert","Heal","Know","Lead","Magic","Melee","Notice","Perform","Pray","Ranged","Ride"
                  ,"Sail","Sneak","Survive","Trade","Unarmed","Work"];

  let arcaneTraditions = ["High Mage","Elementalist","Necromancer"];
  let devoutTraditions = ["Cleric","Druid","Monk"];
  let generalTraditions = ["Beastmaster","Bard","Duelist","Mageslayer","Skinshifter"];

  let allTraditions = arcaneTraditions.concat(devoutTraditions,generalTraditions);

  document.getElementById("backgroundBox").value = char.background.name;
  document.getElementById("classBox").value = char.class;
  document.getElementById("hpBox").value = char.hitPoints;

  let attributeArray = ["str", "dex", "con", "int", "wis", "cha"];

  for(let i=0;i<attributeArray.length;i++){
    document.getElementById((attributeArray[i]) + "Box").value = char.attributes[i]
  }

  setSkills();
  setBonuses();
  setAbilities();
  setFocusPicks()


  let traditionNode = document.getElementById('traditionList');
    while(traditionNode.firstChild){traditionNode.removeChild(traditionNode.firstChild);}
      for(let i=0; i<allTraditions.length; i++){
        let node = document.createElement("li");
        let textNode = document.createTextNode(allTraditions[i]);
        node.appendChild(textNode);
        traditionNode.appendChild(node);
      }



  function setSkills(){
    //populate list of skills generated by background
    let skillNode = document.getElementById('skillList');
    while(skillNode.firstChild){skillNode.removeChild(skillNode.firstChild);}
      for(let i=0; i<char.skills.length; i++){
        let node = document.createElement("li");
        let textNode = document.createTextNode(char.skills[i]);
        node.appendChild(textNode);
        skillNode.appendChild(node);
      }

      //add buttons for the skill of your choice
      let skillListNode = document.getElementById('allSkillList');
      while(skillListNode.firstChild){skillListNode.removeChild(skillListNode.firstChild);}
      for(let i=0; i<allSkills.length; i++){
        let node = document.createElement("li");
        let buttonNode = document.createElement("button");
        let textNode = document.createTextNode(allSkills[i]);
        buttonNode.appendChild(textNode);
        node.appendChild(buttonNode);
        skillListNode.appendChild(node);
        buttonNode.classList.add("skillButton");
        buttonNode.id=allSkills[i];

        //clone to remove event listeners and add a new one
        let clone = (buttonNode.cloneNode(true));
        buttonNode.parentNode.replaceChild(clone, buttonNode);
        buttonNode = document.getElementById(allSkills[i]);
        buttonNode.addEventListener("click", () => { addSkill(event) });
      }
  }

  function addSkill(event){
    let buttonVal = event.target.attributes.id.value;
    let skillNode = document.getElementById('skillList');
    let node = document.createElement("li");
    let textNode = document.createTextNode(buttonVal);
    node.appendChild(textNode);
    skillNode.appendChild(node);

    let allSkillButtons = document.querySelectorAll("button.skillButton");
    allSkillButtons.forEach(btn =>{
      btn.disabled=true;
    })

  }

  function setBonuses(){
    let bonuses = char.bonuses;

    let physRef = document.getElementById('phys');
    let mentRef = document.getElementById('ment');
    let allRef = document.getElementById('all');

    physRef.innerHTML = 0;
    mentRef.innerHTML = 0;
    allRef.innerHTML = 0;

    let physVal = parseInt(physRef.innerHTML);
    let mentVal = parseInt(mentRef.innerHTML);
    let allVal = parseInt(allRef.innerHTML);

    for (let i=0; i<char.bonuses.length; i++){
      let bonus = char.bonuses[i];
      '1All','2Phys','2Phys','2Ment'
      switch (bonus) {
        case '1All':
          allVal++;
          break;
        case '2Phys':
          physVal++;
          break;
        case '2Ment':
          mentVal++;
          break;
        default:
          char.skills.push(bonus);
          let skillNode = document.getElementById('skillList');
          let node = document.createElement("li");
          let textNode = document.createTextNode(bonus);
          node.appendChild(textNode);
          skillNode.appendChild(node);
      }
    }
    physRef.innerHTML = physVal.toString();
    mentRef.innerHTML = mentVal.toString();
    allRef.innerHTML = allVal.toString();

    if (physVal>0){
      document.getElementById("str2").disabled=false;
      document.getElementById("dex2").disabled=false;
      document.getElementById("con2").disabled=false;
    }
    if (mentVal>0){
      document.getElementById("int2").disabled=false;
      document.getElementById("wis2").disabled=false;
      document.getElementById("cha2").disabled=false;
    }
    if (allVal>0){
      document.getElementById("str1").disabled=false;
      document.getElementById("dex1").disabled=false;
      document.getElementById("con1").disabled=false;
      document.getElementById("int1").disabled=false;
      document.getElementById("wis1").disabled=false;
      document.getElementById("cha1").disabled=false;
    }
    
      document.getElementById("str14").disabled=false;
      document.getElementById("dex14").disabled=false;
      document.getElementById("con14").disabled=false;
      document.getElementById("int14").disabled=false;
      document.getElementById("wis14").disabled=false;
      document.getElementById("cha14").disabled=false;
  }

  function changeBonuses(valArray){
    let bonusExpended = valArray[2];
    let physRef = document.getElementById('phys');
    let mentRef = document.getElementById('ment');
    let allRef = document.getElementById('all');
    let physVal = parseInt(physRef.innerHTML);
    let mentVal = parseInt(mentRef.innerHTML);
    let allVal = parseInt(allRef.innerHTML);

    if (bonusExpended=='physVal'){
      physVal--;
    } else if (bonusExpended=='mentVal'){
      mentVal--;
    }else if (bonusExpended=='allVal'){
      allVal--;
    }

    physRef.innerHTML = physVal.toString();
    mentRef.innerHTML = mentVal.toString();
    allRef.innerHTML = allVal.toString();

    if (physVal<1){
      document.getElementById("str2").disabled=true;
      document.getElementById("dex2").disabled=true;
      document.getElementById("con2").disabled=true;
    }
    if (mentVal<1){
      document.getElementById("int2").disabled=true;
      document.getElementById("wis2").disabled=true;
      document.getElementById("cha2").disabled=true;
    }
    if (allVal<1){
      document.getElementById("str1").disabled=true;
      document.getElementById("dex1").disabled=true;
      document.getElementById("con1").disabled=true;
      document.getElementById("int1").disabled=true;
      document.getElementById("wis1").disabled=true;
      document.getElementById("cha1").disabled=true;
    }

    if (bonusExpended=="val14"){
      document.getElementById("str14").disabled=true;
      document.getElementById("dex14").disabled=true;
      document.getElementById("con14").disabled=true;
      document.getElementById("int14").disabled=true;
      document.getElementById("wis14").disabled=true;
      document.getElementById("cha14").disabled=true;
    }
  }



  let statButtons = document.querySelectorAll("button.statButton");
  statButtons.forEach(btn => {
    let clone = (btn.cloneNode(true));
    btn.parentNode.replaceChild(clone, btn);
  });
  statButtons = document.querySelectorAll("button.statButton");
  statButtons.forEach(btn => {
     btn.addEventListener("click", () => { addStat(event) });
  });

  function addStat(event) {
    let buttonVal = event.target.attributes.value.value;
    let valArray = buttonVal.split(",");
    let bonus = parseInt(valArray[1]);
    let stat = document.getElementById(valArray[0]);
    let currentVal = parseInt(stat.value);

    if (bonus==14){
      currentVal=14;
    }
    else{
    currentVal+=bonus;
    }
    stat.value = currentVal.toString();

    changeBonuses(valArray);
}

  function setAbilities(){

    let abilityNode = document.getElementById('classAbilities');
    while(abilityNode.firstChild){abilityNode.removeChild(abilityNode.firstChild);}
      for(let i=0; i<char.abilities.length; i++){
        let node = document.createElement("li");
        let textNode = document.createTextNode(char.abilities[i]);
        node.appendChild(textNode);
        abilityNode.appendChild(node);
      }
  }

  function setFocusPicks(){

    let focusNode = document.getElementById('focusPicks');
    while(focusNode.firstChild){focusNode.removeChild(focusNode.firstChild);}
    
        let node = document.createElement("li");
        let textNode = document.createTextNode('1 Any');
        node.appendChild(textNode);
        focusNode.appendChild(node);
      
        if (char.class=="Martial"){
          let node = document.createElement("li");
          let textNode = document.createTextNode('1 Martial');
          node.appendChild(textNode);
          focusNode.appendChild(node);
        }

        if (char.class=="Deft"){
          let node = document.createElement("li");
          let textNode = document.createTextNode('1 Deft');
          node.appendChild(textNode);
          focusNode.appendChild(node);
        }

        if (char.class=="Arcane"){
          let node = document.createElement("li");
          let textNode = document.createTextNode('1 Arcane Tradition');
          node.appendChild(textNode);
          focusNode.appendChild(node);

          node = document.createElement("li");
          textNode = document.createTextNode('1 Any Tradition');
          node.appendChild(textNode);
          focusNode.appendChild(node);
        }

        if (char.class=="Devout"){
          let node = document.createElement("li");
          let textNode = document.createTextNode('1 Devout Tradition');
          node.appendChild(textNode);
          focusNode.appendChild(node);

          node = document.createElement("li");
          textNode = document.createTextNode('1 Any Tradition');
          node.appendChild(textNode);
          focusNode.appendChild(node);
        }
  }

}



window.charExport=()=>{

}